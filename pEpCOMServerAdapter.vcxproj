<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A27BD6BF-63BC-473D-B8BD-84ACB085F39C}</ProjectGuid>
    <Keyword>AtlProj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <VcpkgTriplet Condition="'$(Platform)'=='x64'">x64-windows-static-md</VcpkgTriplet>
    <ProjectName>planckCOMServerWrapper</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <CodeAnalysisRuleSet>C:\Program Files (x64)\Microsoft Visual Studio 14.0\Team Tools\Static Analysis Tools\Rule Sets\NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <LibraryPath>$(SolutionDir)\vcpkg\installed\x64-windows-static-md\debug\lib;$(SolutionDir)$(ConfigurationName)\;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <CodeAnalysisRuleSet>C:\Program Files (x64)\Microsoft Visual Studio 14.0\Team Tools\Static Analysis Tools\Rule Sets\NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <LibraryPath>$(SolutionDir)\vcpkg\installed\x64-windows-static-md\lib;$(SolutionDir)$(ConfigurationName)\;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Platform)'=='x64'">
    <PostBuildEvent>
      <Command>echo "Registering server $(TargetPath)"</Command>
      <Command>$(TargetPath) /Regserver</Command>
      <Command>echo "Generating interop assembly $(TargetDir)planckCOMServerWrapper.Interop.dll"</Command>
      <Command>TlbImp.exe "$(TargetPath)" /out:"$(TargetDir)\planckCOMServerWrapper.Interop.dll" /namespace:planckCOMServerWrapperLib /primary /keyfile:"$(ProjectDir)pEp_test.snk" /machine:Agnostic"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>JSON_ADAPTER_LIBRARY;DEBUG_ENABLED;WIN32;_WINDOWS;_DEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <EnablePREfast>false</EnablePREfast>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)planckJSONServerWrapper\server;$(SolutionDir);$(SolutionDir)\include;$(SolutionDir)\include\pEp;$(SolutionDir)PlanckCoreV3\asn.1;$(SolutionDir)\libPlanckWrapper\src;$(SolutionDir)\vcpkg\installed\x64-windows-static-md\include;</AdditionalIncludeDirectories>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <TargetEnvironment>x64</TargetEnvironment>
      <PreprocessorDefinitions>_DEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>planckCOMServerWrapper_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>planckCOMServerWrapper_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>planckCOMServerWrapper_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)planckCOMServerWrapper.tlb</TypeLibraryName>
      <DllDataFileName />
      <ValidateAllParameters>true</ValidateAllParameters>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_DEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>
      </AdditionalOptions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <RegisterOutput>false</RegisterOutput>
      <AdditionalDependencies>comsuppwd.lib;%(AdditionalDependencies);Wininet.lib;bcrypt.lib;Crypt32.lib;libpEpAdapter.lib;libpEpCxx11.lib;archive.lib;boost_atomic-vc140-mt-gd.lib;boost_chrono-vc140-mt-gd.lib;boost_cobalt-vc140-mt-gd.lib;boost_container-vc140-mt-gd.lib;boost_context-vc140-mt-gd.lib;boost_contract-vc140-mt-gd.lib;boost_coroutine-vc140-mt-gd.lib;boost_date_time-vc140-mt-gd.lib;boost_exception-vc140-mt-gd.lib;boost_fiber-vc140-mt-gd.lib;boost_filesystem-vc140-mt-gd.lib;boost_graph-vc140-mt-gd.lib;boost_iostreams-vc140-mt-gd.lib;boost_json-vc140-mt-gd.lib;boost_locale-vc140-mt-gd.lib;boost_log-vc140-mt-gd.lib;boost_log_setup-vc140-mt-gd.lib;boost_math_c99-vc140-mt-gd.lib;boost_math_c99f-vc140-mt-gd.lib;boost_math_c99l-vc140-mt-gd.lib;boost_math_tr1-vc140-mt-gd.lib;boost_math_tr1f-vc140-mt-gd.lib;boost_math_tr1l-vc140-mt-gd.lib;boost_nowide-vc140-mt-gd.lib;boost_program_options-vc140-mt-gd.lib;boost_python311-vc140-mt-gd.lib;boost_random-vc140-mt-gd.lib;boost_regex-vc140-mt-gd.lib;boost_serialization-vc140-mt-gd.lib;boost_stacktrace_noop-vc140-mt-gd.lib;boost_stacktrace_windbg-vc140-mt-gd.lib;boost_stacktrace_windbg_cached-vc140-mt-gd.lib;boost_system-vc140-mt-gd.lib;boost_thread-vc140-mt-gd.lib;boost_timer-vc140-mt-gd.lib;boost_type_erasure-vc140-mt-gd.lib;boost_unit_test_framework-vc140-mt-gd.lib;boost_url-vc140-mt-gd.lib;boost_wave-vc140-mt-gd.lib;boost_wserialization-vc140-mt-gd.lib;bz2d.lib;charset.lib;cryptopp.lib;iconv.lib;libcrypto.lib;libexpatdMD.lib;libssl.lib;libxml2.lib;lz4d.lib;lzma.lib;python311_d.lib;zlibd.lib;zstd.lib;</AdditionalDependencies>
      <PerUserRedirection>true</PerUserRedirection>
      <AdditionalLibraryDirectories>$(SolutionDir)$(ConfigurationName)\;$(SolutionDir)$(Platform)\$(ConfigurationName)\</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>JSON_ADAPTER_LIBRARY;DEBUG_ENABLED;WIN32;_WINDOWS;NDEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <EnablePREfast>false</EnablePREfast>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)planckJSONServerWrapper\server;$(SolutionDir);$(SolutionDir)\include;$(SolutionDir)\include\pEp;$(SolutionDir)PlanckCoreV3\asn.1;$(SolutionDir)\libPlanckWrapper\src;$(SolutionDir)\vcpkg\installed\x64-windows-static-md\include</AdditionalIncludeDirectories>
    </ClCompile>
    <Midl>
      <MkTypLibCompatible>false</MkTypLibCompatible>
      <TargetEnvironment>x64</TargetEnvironment>
      <PreprocessorDefinitions>NDEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <HeaderFileName>planckCOMServerWrapper_i.h</HeaderFileName>
      <InterfaceIdentifierFileName>planckCOMServerWrapper_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>planckCOMServerWrapper_p.c</ProxyFileName>
      <GenerateStublessProxies>true</GenerateStublessProxies>
      <TypeLibraryName>$(IntDir)planckCOMServerWrapper.tlb</TypeLibraryName>
      <DllDataFileName />
      <ValidateAllParameters>true</ValidateAllParameters>
    </Midl>
    <ResourceCompile>
      <Culture>0x0409</Culture>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;_WIN32_WINNT=0x0A00;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RegisterOutput>true</RegisterOutput>
      <AdditionalDependencies>comsuppw.lib;%(AdditionalDependencies);Wininet.lib;bcrypt.lib;Crypt32.lib;libpEpAdapter.lib;libpEpCxx11.lib;archive.lib;boost_atomic-vc140-mt.lib;boost_chrono-vc140-mt.lib;boost_cobalt-vc140-mt.lib;boost_container-vc140-mt.lib;boost_context-vc140-mt.lib;boost_contract-vc140-mt.lib;boost_coroutine-vc140-mt.lib;boost_date_time-vc140-mt.lib;boost_exception-vc140-mt.lib;boost_fiber-vc140-mt.lib;boost_filesystem-vc140-mt.lib;boost_graph-vc140-mt.lib;boost_iostreams-vc140-mt.lib;boost_json-vc140-mt.lib;boost_locale-vc140-mt.lib;boost_log-vc140-mt.lib;boost_log_setup-vc140-mt.lib;boost_math_c99-vc140-mt.lib;boost_math_c99f-vc140-mt.lib;boost_math_c99l-vc140-mt.lib;boost_math_tr1-vc140-mt.lib;boost_math_tr1f-vc140-mt.lib;boost_math_tr1l-vc140-mt.lib;boost_nowide-vc140-mt.lib;boost_program_options-vc140-mt.lib;boost_python311-vc140-mt.lib;boost_random-vc140-mt.lib;boost_regex-vc140-mt.lib;boost_serialization-vc140-mt.lib;boost_stacktrace_noop-vc140-mt.lib;boost_stacktrace_windbg-vc140-mt.lib;boost_stacktrace_windbg_cached-vc140-mt.lib;boost_system-vc140-mt.lib;boost_thread-vc140-mt.lib;boost_timer-vc140-mt.lib;boost_type_erasure-vc140-mt.lib;boost_unit_test_framework-vc140-mt.lib;boost_url-vc140-mt.lib;boost_wave-vc140-mt.lib;boost_wserialization-vc140-mt.lib;bz2.lib;charset.lib;cryptopp.lib;iconv.lib;libcrypto.lib;libexpatMD.lib;libssl.lib;libxml2.lib;lz4.lib;lzma.lib;python311.lib;zlib.lib;zstd.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)$(ConfigurationName)\;$(SolutionDir)$(Platform)\$(ConfigurationName)\</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="CMainWindow.cpp" />
    <ClCompile Include="CpEpEngine.cpp" />
    <ClCompile Include="GateKeeper.cpp" />
    <ClCompile Include="LocalJSONAdapter.cpp" />
    <ClCompile Include="MediaKeyManager.cpp" />
    <ClCompile Include="planckCOMServerWrapper.cpp" />
    <ClCompile Include="planckCOMServerWrapper_i.c">
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </PrecompiledHeader>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="pEp_utility.cpp" />
    <ClCompile Include="LocalProvisioning.cpp" />
    <ClCompile Include="ExtraKeyManager.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="unpack.cc" />
    <ClCompile Include="utf8_helper.cpp" />
    <ClCompile Include="xdlldata.c">
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </PrecompiledHeader>
      <CompileAsManaged Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</CompileAsManaged>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
      </PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\planckJSONServerWrapper\server\adapter-library.hh" />
    <ClInclude Include="CMainWindow.h" />
    <ClInclude Include="CpEpEngine.h" />
    <ClInclude Include="ExtraKeyManager.h" />
    <ClInclude Include="GateKeeper.h" />
    <ClInclude Include="LocalJSONAdapter.h" />
    <ClInclude Include="LocalProvisioning.h" />
    <ClInclude Include="MediaKeyManager.h" />
    <ClInclude Include="planckCOMServerWrapper.h" />
    <ClInclude Include="planckCOMServerWrapper_i.h" />
    <ClInclude Include="pEp_utility.h" />
    <ClInclude Include="ProvisioningLog.h" />
    <ClInclude Include="Resource.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="unpack.hh" />
    <ClInclude Include="utf8_helper.h" />
    <ClInclude Include="xdlldata.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="planckCOMServerWrapper.rc" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="LICENSE.txt" />
    <Text Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="planckCOMServerWrapper.rgs" />
    <None Include="pEpEngine.rgs" />
    <None Include="pep_test.snk" />
    <None Include="updatekey.bin" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="planckCOMServerWrapper.idl" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\libPlanckWrapper\build-windows\libpEpAdapter.vcxproj">
      <Project>{ec44fec9-2f3a-4a0c-b60e-0f22aa43ef58}</Project>
    </ProjectReference>
    <ProjectReference Include="..\PlanckCoreV3\build-windows\pEpEngine.vcxproj">
      <Project>{146e69f8-e1da-456a-b048-6dd29d9acf6b}</Project>
    </ProjectReference>
    <ProjectReference Include="..\planckJSONServerWrapper\build-windows\pEpJSONServerAdapter\pEpJSONServerAdapterLibrary.vcxproj">
      <Project>{644d1ba4-084c-47b2-8a9e-00a8d9f9a35c}</Project>
    </ProjectReference>
    <ProjectReference Include="..\planckJSONServerWrapper\build-windows\pEp\libpEpWebserver\libpEpWebserver.vcxproj">
      <Project>{0d25734e-a71b-4536-8dc4-60e945382fc5}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Image Include="logo.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Import Project="$(SolutionDir)vcpkg\scripts\buildsystems\msbuild\vcpkg.props" />
</Project>